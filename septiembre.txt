// * 07.09.MI
// Introduccion al Desarrollo de software
// Terminos:
// SCRUM, agile, Jira, Git (GitLab, GitHub) , Frontend, Linux POG
// Es interesante lo de trabajar en equipo
// Se asigno una carpeta con ideas para proyecto( Papeleria, Administracion y Hospital) y Sprint 1

// Para poder desarrollar los contenidos y Sprints del ciclo, el beneficiario trabajará con el editor de texto Visual Studio Code, con lenguajes Java, HTML, CSS y JavaScript. Además. También se debe utilizar algunos frameworks, como Spring Boot y Bootstrap, Jira, GitHub - GitLab y MySQL. 
// En la plataforma LMS, el beneficiario podrá encontrar los videos y tutoriales que le ayudarán a resolver sus dudas .
// Cada equipo, contará con el acceso a un servidor remoto en el cual podrá administrar, configurar e implantar en modo producción su proyecto WEB

// Analisis:
// Lo que se pide => Requerimientos => socialicacion y aprobacion (Usuario)

// Diseño:
// Modelado Arquetectura de datos => Modelamientos de procesos => Seguridad y respaldo => Interfaz (Front-end)

// Desarrollo:
// Esquema de las bases de datos => Programacion

// ! Programar != que desarrollar, pero para desarrollar tienes que programar

// Implementation
// Pruebas (de componentes, unitarias, de humo) => Ajustes => Puesta en Funcionamiento

// * 08.08.JU

// Ingenieria de requerimientos

// Cumplir requerimientos obvios, como seguridad, funcionalidades o diseño de calidad

// Proyectos de marcha funebre la mitad del personal, presupuesto y plazo y se exigue el doble de funcionalidad, ¿fracaso casi seguro?
// Una buena gestion:
// ! Trabajo en equipo
// - Contratar a las personas adecuadas
// - Asignarlas a los trabajos adecuados
// - Mantenerlas motivadas
// - Ayudar a sus equipos a integrarse y permanecer integrados

// Un director de proyectos
// - Confia en sus tripas(instinto)
// - Lidera con es corazon ( poniendose en los zapatos del otro y tener tacto)
// - Contruye alma en la organizacion (Hacer que los integrantes conecten mejor)
// - Desarrolla olfato a los problemas (Saber indentificar y buscar soluciones a problemas)

// Trabajar mas de 80 horas semanales no mejora la productividad
// Tambien se puede perder produccion por cambiar el personal

// Proyectos que no estan bien estructurados pueden afectar al proyecto principal
// Algunos esperan que se firme contrato o se compren requerimientos para empezar a planear la arquitectura y cosas importantes
// Exiten ocaciones en los que las negociaciones son largas y requiren cambios constantes

//Recomendaciones
// Los equipos de preventa deben documentar todos los compromisos y
// mantenerlos actualizados en "tiempo real" en un lugar accesible, con
// control de cambios y con capacidad de trazabilidad a funcionalidad del
// producto.

// Debe existir un proceso de gestión de cambios durante la fase de
// preventa que permita que las negociaciones sean ágiles sin perder el
// control sobre el contenido de los compromisos.

// ! Ley de Parkinson

// Diseño: Como del sistema
// Requerimientos: Explica que es lo que se busca que el programa haga (Que del sistema)
// Funcionales: ¿Que debe hacer? - Se cumplen ciertas condiciones
//      - Caracteriscas de la aplicacion, que ayudena solucionar la necesidad
//      - Comoda y visual °<°
// No funcionales:
//      - Todo lo que la aplicacion que necesita para funcionar pero que el usuario no ve
//      - Disponibilidad, y mantenibilidad 
// Restricciones:

// Requerimientos del negocio, del software, del usuario

// Realizables, Necesarios, No ambiguos, Verificables, Consistente, Seguible - Trazable

// * 09.09.VI Presentacion 
//Semana 1 - Sesion 3 - Ciclo 3

// Definicion del proyecto

// Aplicacion web => Software montado en servidor web

// Definicion del proyecto

// Objetivos generales: Verbo en infinitivo ¿Que cosa?, ¿Como? y ¿Porque?
// Objetivos especificos: Verbo en infinitivo, Concreto, Medible, Alcanzable, Relevante, Limitado en el tiempo
// Descripcion del proyecto: 
//      1. 
// Justificacion: Significado, Originalidad, Aplicabilidad, Interes Social, Aportes Teoricos y Factibilidad

// Metodologias Agiles: Kanban, Scrum, Lean, Spren

// SCRUM: Se divide en Esprents (Cada 2 semanas) (Cada uno con tareas y un tiempo estipulado)
// Para entornos cambiantes, que requieren actualizaciones y correciones durante el desarrollo
// Planificacion: Establecer tareas y descartar las que no sean priridad (Objetivos pequeños)
// Scrum mater, Product Owner, equipo de desarrollo(Scrum team) y cliente

// Caracteristicas: 
// Comunicacion (reuniones), 
// Tiempo (Fechas limites)(2-4 Semanas)(Prototipo funcional)
// Entregables (Resultados => Funcionalidades, productos, prototipos etc)

// Fase 1: Sprint Planning (Planear cuantos sprints y cuantos duraran) 
//      - Se establece carga de trabajo
// Daily Scrum Meeting => Reflexion matutina

// * 10.09.SA

// Desarrollo de Software SCRUM

// * 14.09.MI

// Sistema de control de versiones

// Repositorios de Código Alojamiento – Control de versiones

// GitLab
//      - git clone < url
//      - git checkout < url
//      - git branch nombreRama
//      - git checkout nombreRama
//      - git commit m “ descripcion
//      - git push u origin nombreRama

// https://www.freecodecamp.org/espanol/news/10-comandos-de-git-que-todo-desarrollador-deberia-saber/

// Comandos en imagenes ciclo 3

// se uso: add, commit

// cd existing_repo
// git remote add origin https://gitlab.com/pJulianV/mi-web-personal.git
// git branch -M main
// git push -uf origin main

// * 15.09.JU

// Despues de poder ingresar: git clone "link"

// cd "nombre carpeta"

// git add "nombre de archivo"

// git commit -a -m "The Commit message" ó git commit -m "The Commit message"

// git push  para subir a gitlab / github

// ! Se Adjunto Taller GitLab Con indicaciones


// * 16.09.VI

// Rafael, Julian intentara usar "Concepts" de la Microsoft Store para hacer:
// Mapas de chunks relacionales - No se como agregar texto >:(

// Arquitectura WEB Y HTML5
// Recomendaciones:
// • Establecer lo que quieres mostrar.
// • Definir los objetivos de los usuarios.
// • ¿Quiénes son las personas que utilizarán el sitio
// web?
// • ¿Qué van a hacer estos usuarios en la web?
// • ¿Cuáles son sus metas?

Recomendaciones:
• Analizar competidores.
• Fíjate en cómo han organizado ellos la información en
su web:
• ¿Dónde muestran la información?
• ¿Cuáles son sus categorías?
• ¿Tienen una web fácil de navegar?
• ¿Qué es lo que mejor hacen y qué se puede mejorar?
• Hacer un estudio de palabras clave para mejorar el
posicionamiento.
• Diseñar la arquitectura de información
file:///C:/Users/USUARIO/OneDrive/Escritorio/Tec%20Prog/C3-%20Software.%20Dev/C3-G53-DESARROLLO%20DE%20SOFTWARE/Presentaciones/HTML_PresentacionFormador.pdf

Nomenclatura

17.09.SA

Un objetivo es un objetivo si responde un ¿Que? ¿Como? ¿Para Que? y ¿Porques?

21.09.MI
DDL (Lenguaje de definicion de datos)
* create
    * add?
* ?
* ?

* En fin Comandos para crear eliminar actualizar y demas acciones en MySQL - WorkBench

DML (Lenguaje Manipulador de datos)
* insert
* update
* delect 
* select 

22.09.JU 
Se vio las relaciones uno-uno, uno-muchos, muchos-muchos y se hicieron ejercicios para papeleria, administracion y hospital

23.09.VI
Viste CSS con presentacion en semana 3 y pusiste en practica en tu web personal

24.09.SA

Bootstrap: Viste sobre bootstrap en una presentacion y pusiste eso en un archivo html dentro de la carpeta html de tu web personal

    Instalar y Ejemplos de uso: https://dinahosting.com/blog/bootstrap-que-es-como-instalarlo-y-ejemplos-de-uso/
    Todos los links de la clase (Sobre Bootstrap)en index de mi html

Resposive Web Desing: 
    
    El diseño responsive, adaptativo o responsivo es una
    técnica de diseño web que busca la correcta
    visualización de una misma página en distintos
    dispositivos.
    
    Se trata de redimensionar y colocar los elementos de laweb de forma que se adapten 
    al ancho de cadadispositivo permitiendo una correcta visualización yuna mejor 
    experiencia de usuario. Se caracterizaporque los layouts (contenidos) e imágenes son 
    fluidos y se usa código media-queries de CSS3.

28.09.MI

    Implementacion: <script src="micodigo.js"></script>
    var = alcance contextual
    let = alcance local

    Las -funciones- se pueden llamar desde el HTML Ej: <p onclick = "suma()">No de clik aqui</p>
